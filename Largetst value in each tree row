/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> largestValues(TreeNode root) {
        if(root == null){
            return  new ArrayList<>();
        }
     List<Integer> res = new ArrayList<>();
         
         Queue<TreeNode> q = new LinkedList<>();
         q.add(root);
        while(q.size() > 0){
            int sz = q.size();
            int m = Integer.MIN_VALUE;
            for(int i = 0 ; i < sz ; i++){
                TreeNode  rem = q.remove();
                m = Math.max(m , rem.val);
                
                if(rem.left != null){
                    q.add(rem.left);
                }
                if(rem.right != null){
                    q.add(rem.right);
                }
            }
            res.add(m);
        }
        return res;
    }
}
